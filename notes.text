This file is created for experimentation and testing by me
-----------------------------------------------------------------------------------------------------------
gc C:\Certificate\root.crt | ac C:\Certificate\cacert.pem
gc C:\Certificate\child1.crt | ac C:\Certificate\cacert.pem
gc C:\Certificate\child2.crt | ac C:\Certificate\cacert.pem
gc C:\Certificate\child3.crt | ac C:\Certificate\cacert.pem


set NODE_EXTRA_CA_CERTS=C:\Certificate\cacert.pem

$env:NODE_EXTRA_CA_CERTS = 'C:\Certificate\cacert.pem'


----------------------------------------------------------------------------------------------------------
You need to do the following,

Visit https://playwright.azureedge.net and download the complete certificate chain
Let's assume your certificates are stored as root.crt, child1.crt, child2.crt, ... , childN.crt etc. at D:\
Now create an empty file say D:\cacert.pem and execute the below commands in Powershell,
gc d:\root.crt | ac d:\cacert.pem
gc d:\child1.crt | ac d:\cacert.pem
gc d:\child2.crt | ac d:\cacert.pem
...
gc d:\childN.crt | ac d:\cacert.pem
Now set the NODE_EXTRA_CA_CERTS variable as set NODE_EXTRA_CA_CERTS=D:\caert.pem on command line (or $env:NODE_EXTRA_CA_CERTS = 'D:\caert.pem' in Powershell).
Now your playwright install command should work properly.

-----------------------------------------------------------------------------------------------------------

C:\Users\amit_tendulkar>d:\venv\amazon\Scripts\activate

(amazon) C:\Users\amit_tendulkar>python -m certifi
D:\venv\amazon\lib\site-packages\certifi\cacert.pem

(amazon) C:\Users\amit_tendulkar>set NODE_EXTRA_CA_CERTS=D:\venv\amazon\lib\site-packages\certifi\cacert.pem

(amazon) C:\Users\amit_tendulkar>playwright install

-------------------------------------------------------------------------------------------------------------

first Initial Notes

# tests/test_bing_maps.py

import unittest
from playwright.sync_api import sync_playwright
from pages.home_page import HomePage


class BingMapsTest(unittest.TestCase):

    def setUp(self):
        self.playwright = sync_playwright().start()

        # Headless
        # self.browser = self.playwright.chromium.launch()

        # Without Headless
        self.browser = self.playwright.chromium.launch(headless=False)
        self.page = self.browser.new_page()
        self.home = HomePage(self.page)
        self.home.go_to("https://www.bing.com/maps/")

    def test_page_title(self):
        self.assertEqual(self.home.page_title, "Bing Maps - Directions, trip planning, traffic cameras & more")

    def test_directions_button(self):
        self.assertTrue(self.home.get_directions_button.is_visible())

    def test_search_bar(self):
        self.assertTrue(self.home.search_bar.is_visible())

    # def test_map_loads(self):
    #     self.assertTrue(self.home.map_loaded())

    def test_road_view(self):
        self.assertTrue(self.home.road_view_available())

    def tearDown(self):
        self.browser.close()
        self.playwright.stop()


if __name__ == "__main__":
    unittest.main()
